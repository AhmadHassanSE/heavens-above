name: Continuous Integration

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js (without cache)
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        # REMOVED cache to avoid lockfile errors
        
    - name: Check project structure
      run: |
        echo "=== Repository Structure ==="
        ls -la
        echo "=== Package.json check ==="
        if [ -f "package.json" ]; then
          echo "üì¶ package.json found"
          cat package.json | grep -A 10 "scripts"
        else
          echo "‚ùå No package.json found"
        fi
        
    - name: Install dependencies
      if: hashFiles('package.json') != ''
      run: |
        echo "Installing dependencies..."
        # Generate package-lock.json first, then install
        npm install --package-lock-only
        npm install
        echo "Dependencies installed successfully"
        
    - name: Run tests
      if: hashFiles('package.json') != ''
      run: |
        echo "Checking for test scripts..."
        if npm run | grep -q "\"test\""; then
          echo "Running tests..."
          npm test
        else
          echo "No test script found in package.json"
          echo "Available scripts:"
          npm run
        fi
        
    - name: Run linting
      if: hashFiles('package.json') != ''
      run: |
        if npm run | grep -q "\"lint\""; then
          echo "Running linting..."
          npm run lint
        else
          echo "No lint script found"
        fi
        
    - name: Build project
      if: hashFiles('package.json') != ''
      run: |
        if npm run | grep -q "\"build\""; then
          echo "Building project..."
          npm run build
        else
          echo "No build script found"
        fi
        
    - name: Skip non-Node project
      if: hashFiles('package.json') == ''
      run: |
        echo "‚ö†Ô∏è  No package.json found - this may not be a Node.js project"
        echo "Skipping Node.js specific steps"
        
  security-scan:
    runs-on: ubuntu-latest
    if: hashFiles('package.json') != ''  # Only run if package.json exists
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        # NO cache to avoid lockfile errors
        
    - name: Install dependencies for security scan
      run: |
        # Generate lockfile for security audit
        npm install --package-lock-only --no-save
        
    - name: Run security audit
      run: |
        echo "Running npm audit..."
        npm audit --audit-level=high || echo "Audit completed with findings"
        
    - name: Run Snyk security scan (optional)
      if: env.SNYK_TOKEN != ''
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
