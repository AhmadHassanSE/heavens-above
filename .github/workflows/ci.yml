name: Continuous Integration

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies and generate lockfile
      run: |
        npm ci
        # Ensure package-lock.json exists
        if [ ! -f package-lock.json ]; then
          npm install --package-lock-only
        fi
        
    - name: Run tests
      run: npm test
      
    - name: Run linting
      run: npm run lint
      
    - name: Build project
      run: npm run build
      
  security-scan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies and ensure lockfile exists
      run: |
        # Generate package-lock.json if it doesn't exist
        if [ ! -f package-lock.json ]; then
          echo "Generating package-lock.json..."
          npm install --package-lock-only --no-audit
        else
          npm ci
        fi
        
    - name: Run security audit
      run: npm audit --audit-level=high
      
    - name: Run Snyk security scan (optional)
      if: env.SNYK_TOKEN != ''
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high
