name: Dependency Management

on:
  schedule:
    - cron: '0 2 * * 1'  # Weekly on Monday at 2 AM UTC
  workflow_dispatch:

jobs:
  audit-dependencies:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        
    - name: Install dependencies
      run: npm install
      
    - name: Check for outdated dependencies
      id: outdated_check
      run: |
        echo "🔍 Checking for outdated dependencies..."
        npm outdated --json > outdated.json 2>/dev/null || echo "{}" > outdated.json
        
        OUTDATED_COUNT=$(jq 'length' outdated.json)
        if [ "$OUTDATED_COUNT" -gt 0 ]; then
          echo "has_outdated=true" >> $GITHUB_OUTPUT
          echo "outdated_count=$OUTDATED_COUNT" >> $GITHUB_OUTPUT
          echo "Found $OUTDATED_COUNT outdated dependencies"
        else
          echo "has_outdated=false" >> $GITHUB_OUTPUT
          echo "outdated_count=0" >> $GITHUB_OUTPUT
          echo "✅ All dependencies are up to date"
        fi
        
    - name: Security audit
      run: |
        echo "🔒 Running security audit..."
        npm audit --audit-level=high --json > audit-report.json 2>/dev/null || echo '{"vulnerabilities": {}}' > audit-report.json
        
        VULN_COUNT=$(jq '.metadata.vulnerabilities.total // 0' audit-report.json)
        echo "Found $VULN_COUNT vulnerabilities"
        
    - name: Generate comprehensive report
      run: |
        echo "# 📦 Weekly Dependency Report" > dependency-report.md
        echo "**Generated:** $(date)" >> dependency-report.md
        echo "**Repository:** ${{ github.repository }}" >> dependency-report.md
        echo "" >> dependency-report.md
        
        # Outdated dependencies section
        OUTDATED_COUNT=${{ steps.outdated_check.outputs.outdated_count }}
        echo "## Outdated Dependencies: $OUTDATED_COUNT" >> dependency-report.md
        if [ "$OUTDATED_COUNT" -gt 0 ]; then
          echo '```json' >> dependency-report.md
          cat outdated.json >> dependency-report.md
          echo '```' >> dependency-report.md
        else
          echo "✅ All dependencies are up to date!" >> dependency-report.md
        fi
        echo "" >> dependency-report.md
        
        # Security vulnerabilities section
        VULN_COUNT=$(jq '.metadata.vulnerabilities.total // 0' audit-report.json)
        echo "## Security Vulnerabilities: $VULN_COUNT" >> dependency-report.md
        if [ "$VULN_COUNT" -gt 0 ]; then
          echo '```json' >> dependency-report.json
          jq '.metadata.vulnerabilities' audit-report.json >> dependency-report.md
          echo '```' >> dependency-report.md
        else
          echo "✅ No security vulnerabilities found!" >> dependency-report.md
        fi
        echo "" >> dependency-report.md
        
        # Recommendations
        echo "## Recommendations" >> dependency-report.md
        if [ "$OUTDATED_COUNT" -gt 0 ]; then
          echo "🔄 Consider updating outdated dependencies" >> dependency-report.md
        fi
        if [ "$VULN_COUNT" -gt 0 ]; then
          echo "🚨 Address security vulnerabilities promptly" >> dependency-report.md
        fi
        if [ "$OUTDATED_COUNT" -eq 0 ] && [ "$VULN_COUNT" -eq 0 ]; then
          echo "🎉 All dependencies are healthy!" >> dependency-report.md
        fi
        
    - name: Upload reports as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dependency-reports
        path: |
          dependency-report.md
          outdated.json
          audit-report.json
        
    - name: Print summary to workflow log
      run: |
        echo "=== DEPENDENCY CHECK SUMMARY ==="
        echo "Outdated dependencies: ${{ steps.outdated_check.outputs.outdated_count }}"
        echo "Report saved as artifact: dependency-reports"
        cat dependency-report.md
