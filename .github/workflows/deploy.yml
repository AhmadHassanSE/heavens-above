name: Deployment Pipeline

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]

env:
  NODE_VERSION: '18.x'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    outputs:
      docker-image: ${{ steps.build.outputs.image }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test
      
    - name: Build application
      run: npm run build
      
    - name: Build Docker image
      id: build
      run: |
        docker build -t heavens-above:${{ github.sha }} .
        echo "image=heavens-above:${{ github.sha }}" >> $GITHUB_OUTPUT
        
    - name: Save Docker image
      run: docker save heavens-above:${{ github.sha }} -o heavens-above.tar
      
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: heavens-above-docker-image
        path: heavens-above.tar
        
  deploy-staging:
    runs-on: ubuntu-latest
    needs: build-and-test
    environment: staging
    
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: heavens-above-docker-image
        
    - name: Load Docker image
      run: docker load -i heavens-above.tar
      
    - name: Deploy to staging
      run: |
        # Add your staging deployment commands here
        echo "Deploying to staging environment"
        
  deploy-production:
    runs-on: ubuntu-latest
    needs: deploy-staging
    if: startsWith(github.ref, 'refs/tags/v')
    environment: production
    
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: heavens-above-docker-image
        
    - name: Load Docker image
      run: docker load -i heavens-above.tar
      
    - name: Deploy to production
      run: |
        # Add your production deployment commands here
        echo "Deploying to production environment"
